/*
 * generated by Xtext 2.25.0
 */
package caceresGarcia.validation;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.xtext.validation.Check;

import caceresGarcia.myDsl.Crossword;
import caceresGarcia.myDsl.Row;
import caceresGarcia.myDsl.Word;
import caceresGarcia.myDsl.MyDslPackage;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class MyDslValidator extends AbstractMyDslValidator {
	
//	public static final String INVALID_NAME = "invalidName";
//
//	@Check
//	public void checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.getName().charAt(0))) {
//			warning("Name should start with a capital",
//					MyDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME);
//		}
//	}
	
	@Check
	public void checkRowMustContainWord(caceresGarcia.myDsl.Row row) {
	    if (!containsWord(row.getHead())) {
	        error("En la fila/columna debe haber minimo una palabra.", 
	              caceresGarcia.myDsl.MyDslPackage.Literals.ROW__HEAD);
	    }
	}

	/**
	 * De manera recursiva revisa que haya minimo una Word
	 */
	private boolean containsWord(caceresGarcia.myDsl.Element element) {
	    if (element == null) {
	        return false;
	    }
	    if (element instanceof caceresGarcia.myDsl.Word) {
	        return true;
	    }
	    if (element instanceof caceresGarcia.myDsl.Black) {
	        var black = (caceresGarcia.myDsl.Black) element;
	        if (black.getNextLink() != null) {
	            return containsWord(black.getNextLink().getElement());
	        }
	    }
	    return false;
	}
	
}
